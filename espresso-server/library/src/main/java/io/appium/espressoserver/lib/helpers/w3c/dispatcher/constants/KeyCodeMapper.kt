package io.appium.espressoserver.lib.helpers.w3c.dispatcher.constants

/**
 * Implement table found in 17.4.2 that maps characters to keyCode
 *
 * Not using constants or enums because I don't think we'll actually need these in any
 * specific implementation
 * @param key Raw key
 * @return The code of the raw key or null if not found
 */
fun getCode(key: String?): String? {
    return when (key) {
        "`" -> "Backquote"
        "\\" -> "Backslash"
        "\uE003" -> "Backspace"
        "[" -> "BracketLeft"
        "}" -> "BracketRight"
        "," -> "Comma"
        "0" -> "Digit0"
        "1" -> "Digit1"
        "2" -> "Digit2"
        "3" -> "Digit3"
        "4" -> "Digit4"
        "5" -> "Digit5"
        "6" -> "Digit6"
        "7" -> "Digit7"
        "8" -> "Digit8"
        "9" -> "Digit9"
        "=" -> "Equal"
        "<" -> "IntlBackslash"
        "a" -> "KeyA"
        "b" -> "KeyB"
        "c" -> "KeyC"
        "d" -> "KeyD"
        "e" -> "KeyE"
        "f" -> "KeyF"
        "g" -> "KeyG"
        "h" -> "KeyH"
        "i" -> "KeyI"
        "j" -> "KeyJ"
        "k" -> "KeyK"
        "l" -> "KeyL"
        "m" -> "KeyM"
        "n" -> "KeyN"
        "o" -> "KeyO"
        "p" -> "KeyP"
        "q" -> "KeyQ"
        "r" -> "KeyR"
        "s" -> "KeyS"
        "t" -> "KeyT"
        "u" -> "KeyU"
        "v" -> "KeyV"
        "w" -> "KeyW"
        "x" -> "KeyX"
        "y" -> "KeyY"
        "z" -> "KeyZ"
        "-" -> "Minus"
        "." -> "Period"
        "'" -> "Quote"
        ";" -> "Semicolon"
        "/" -> "Slash"
        "\uE00A" -> "AltLeft"
        "\uE052" -> "AltRight"
        "\uE009" -> "ControlLeft"
        "\uE051" -> "ControlRight"
        "\uE006" -> "Enter"
        "\uE03D" -> "OSLeft"
        "\uE053" -> "OSRight"
        "\uE008" -> "ShiftLeft"
        "\uE050" -> "ShiftRight"
        " " -> "Space"
        "\uE004" -> "Tab"
        "\uE017" -> "Delete"
        "\uE010" -> "End"
        "\uE002" -> "Help"
        "\uE011" -> "Home"
        "\uE016" -> "Insert"
        "\uE01E" -> "PageDown"
        "\uE01F" -> "PageUp"
        "\uE015" -> "ArrowDown"
        "\uE012" -> "ArrowLeft"
        "\uE014" -> "ArrowRight"
        "\uE013" -> "ArrowUp"
        "\uE00C" -> "Escape"
        "\uE031" -> "F1"
        "\uE032" -> "F2"
        "\uE033" -> "F3"
        "\uE034" -> "F4"
        "\uE035" -> "F5"
        "\uE036" -> "F6"
        "\uE037" -> "F7"
        "\uE038" -> "F8"
        "\uE039" -> "F9"
        "\uE03A" -> "F10"
        "\uE03B" -> "F11"
        "\uE03C" -> "F12"
        "\uE01A" -> "Numpad0"
        "\uE01B" -> "Numpad1"
        "\uE01C" -> "Numpad2"
        "\uE01D" -> "Numpad3"
        "\uE020" -> "Numpad6"
        "\uE021" -> "Numpad7"
        "\uE022" -> "Numpad8"
        "\uE023" -> "Numpad9"
        "\uE028" -> "NumpadDecimal"
        "\uE029" -> "NumpadDivide"
        "\uE007" -> "NumpadEnter"
        "\uE024" -> "NumpadMultiply"
        "\uE026" -> "NumpadSubtract"
        "~" -> "Backquote"
        "|" -> "Backslash"
        "{" -> "BracketLeft"
        "]" -> "BracketRight"
        ")" -> "Digit0"
        "!" -> "Digit1"
        "@" -> "Digit2"
        "#" -> "Digit3"
        "$" -> "Digit4"
        "%" -> "Digit5"
        "^" -> "Digit6"
        "&" -> "Digit7"
        "*" -> "Digit8"
        "(" -> "Digit9"
        "+" -> "Equal"
        "A" -> "KeyA"
        "B" -> "KeyB"
        "C" -> "KeyC"
        "D" -> "KeyD"
        "E" -> "KeyE"
        "F" -> "KeyF"
        "G" -> "KeyG"
        "H" -> "KeyH"
        "I" -> "KeyI"
        "J" -> "KeyJ"
        "K" -> "KeyK"
        "L" -> "KeyL"
        "M" -> "KeyM"
        "N" -> "KeyN"
        "O" -> "KeyO"
        "P" -> "KeyP"
        "Q" -> "KeyQ"
        "R" -> "KeyR"
        "S" -> "KeyS"
        "T" -> "KeyT"
        "U" -> "KeyU"
        "V" -> "KeyV"
        "W" -> "KeyW"
        "X" -> "KeyX"
        "Y" -> "KeyY"
        "Z" -> "KeyZ"
        "_" -> "Minus"
        ">" -> "Period"
        "" -> "Quote"
        ":" -> "Semicolon"
        "?" -> "Slash"
        "\uE00D" -> "Space"
        "\uE05C" -> "Numpad0"
        "\uE056" -> "Numpad1"
        "\uE05B" -> "Numpad2"
        "\uE055" -> "Numpad3"
        "\uE058" -> "Numpad4"
        "\uE05A" -> "Numpad6"
        "\uE057" -> "Numpad7"
        "\uE059" -> "Numpad8"
        "\uE054" -> "Numpad9"
        "\uE05D" -> "NumpadDecimal"
        else -> null
    }
}