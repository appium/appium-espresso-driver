apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    def props = getProperties()
    compileSdkVersion getIntegerProperty('appiumCompileSdk', 28)
    buildToolsVersion getStringProperty('appiumBuildTools', '28.0.3')
    defaultConfig {
        // <instrumentation android:targetPackage=""/>
        applicationId getStringProperty('appiumTargetPackage', 'io.appium.espressoserver')
        // <manifest package=""/>
        testApplicationId "io.appium.espressoserver.test"
        testHandleProfiling false
        testFunctionalTest false
        minSdkVersion getIntegerProperty('appiumMinSdk', 18)
        targetSdkVersion getIntegerProperty('appiumTargetSdk', 28)
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            zipAlignEnabled getBooleanProperty("appiumZipAlign", true)
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        test {
            java.srcDirs += 'src/androidTest/java'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    signingConfigs {
        debug {
            def appiumKeystoreFile = props.get("appiumKeystoreFile")
            if (appiumKeystoreFile != null) storeFile file(appiumKeystoreFile)

            def appiumKeystorePassword = props.get("appiumKeystorePassword")
            if (appiumKeystorePassword != null) storePassword appiumKeystorePassword

            def appiumKeyAlias = props.get("appiumKeyAlias")
            if (appiumKeyAlias != null) keyAlias appiumKeyAlias

            def appiumKeyPassword = props.get("appiumKeyPassword")
            if (appiumKeyPassword != null) keyPassword appiumKeyPassword
        }
    }
}

dependencies {
    ext.espresso_version = '3.3.0'
    ext.testlib_version = '1.3.0'
    ext.mocklib_version = '1.7.4'
    ext.gson_version = '2.8.6'
    ext.uia_version = '2.2.0'
    ext.nanohttpd_version = '2.3.1'
    ext.annotation_version = '1.1.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // additionalAppDependencies placeholder (don't change or delete this line)

    testImplementation "org.powermock:powermock-api-mockito2:$mocklib_version"
    testImplementation "org.powermock:powermock-classloading-xstream:$mocklib_version"
    testImplementation "org.powermock:powermock-module-junit4-rule:$mocklib_version"
    testImplementation "org.powermock:powermock-module-junit4:$mocklib_version"
    testImplementation "androidx.annotation:annotation:$annotation_version"
    testImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    testImplementation "androidx.test.uiautomator:uiautomator:$uia_version"
    testImplementation "androidx.test:core:$testlib_version"
    testImplementation "androidx.test:runner:$testlib_version"
    testImplementation "androidx.test:rules:$testlib_version"
    testImplementation "com.google.code.gson:gson:$gson_version"
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation "org.nanohttpd:nanohttpd-webserver:$nanohttpd_version"
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    androidTestImplementation "androidx.annotation:annotation:$annotation_version"
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espresso_version") {
        // Exclude transitive dependencies to limit conflicts with AndroidX libraries from AUT.
        // Link to PR with fix and discussion https://github.com/appium/appium-espresso-driver/pull/596
        transitive = false
    }
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uia_version"
    androidTestImplementation "androidx.test:core:$testlib_version"
    androidTestImplementation "androidx.test:runner:$testlib_version"
    androidTestImplementation "androidx.test:rules:$testlib_version"
    androidTestImplementation "com.google.code.gson:gson:$gson_version"
    androidTestImplementation "org.nanohttpd:nanohttpd-webserver:$nanohttpd_version"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // additionalAndroidTestDependencies placeholder (don't change or delete this line)
}

tasks.withType(Test) {
    systemProperty "skipespressoserver", "true"
}
