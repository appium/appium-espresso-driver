language: android
dist: precise
jdk:
  - oraclejdk8
android:
  components:
    # use the latest revision of Android SDK Tools
    - platform-tools
    - tools
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-24
    - android-25

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-19

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-24
env:
  global:
    - NODE_VERSION=6
    - DEVICE=android
    - START_EMU=1
    - ANDROID_EMU_TARGET=android-24
    - ANDROID_EMU_NAME=test
    - ANDROID_EMU_ABI=armeabi-v7a
    - ANDROID_BUILD_TOOLS=27.0.3
    - MOCHA_TIMEOUT=0
    - RECURSIVE=""
  matrix:
    - TEST=unit START_EMU=0 RECURSIVE="--recursive"
    - TEST=functional
    - TEST=functional/commands
before_install:
  - |
    if [ ${START_EMU} = "1" ]; then
      echo y | android update sdk --no-ui -t platform-tools;
      echo y | android update sdk --no-ui -t tools;
      echo no | android create avd --force -n ${ANDROID_EMU_NAME} -t ${ANDROID_EMU_TARGET} --abi ${ANDROID_EMU_ABI} --sdcard 200M;
      QEMU_AUDIO_DRV=none emulator -avd ${ANDROID_EMU_NAME} -no-window &
    fi
install:
  # node stuff
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
  - nvm install ${NODE_VERSION}
  - node --version
  - npm --version

  # npm stuff
  - npm install

  # build the server
  - |
    if [ ${START_EMU} = "1" ]; then
      npm run build:server
    fi
before_script:
  - |
    if [ ${START_EMU} = "1" ]; then
      # make sure emulator started
      $(npm bin)/android-emu-travis-post;
    fi
script:
  - npm run lint && npm run mocha -- -t ${MOCHA_TIMEOUT} ${RECURSIVE} build/test/${TEST} -g @skip-ci -i --exit;
after_failure:
  - |
    if [ "$TEST" != "unit" ]; then
      echo -e "----LOGCAT----\n"
      adb logcat -d
    fi
